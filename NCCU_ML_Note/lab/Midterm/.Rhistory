?cv.glmnet
cvfit = cv.glmnet(x, y,family='multinomial',xtype.multinomial = "class", parallel = TRUE)
cvfit = cv.glmnet(x, y,family='multinomial',type.multinomial = "class", parallel = TRUE)
cvfit = cv.glmnet(x, y,family='multinomial',type.multinomial = "class", parallel = TRUE)
cvfit = cv.glmnet(x, y,family='multinomial',
type.measure='class',
type.multinomial = "grouped", parallel = TRUE)
cvfit$lambda.1se
cvfit$cvm
cvfit = cv.glmnet(x, y,family='multinomial',
nflods=148,
type.measure='class',
type.multinomial = "grouped", parallel = TRUE)
cvfit = cv.glmnet(x, y,family='multinomial',
nfolds=148,
type.measure='class',
type.multinomial = "grouped", parallel = TRUE)
plot(cvfit)
cvfit$cvm
cvfit$cvsd
warnings()
fish <- read.table('/Users/sheng/Documents/NCCU/ML/NCCU_ML_Note/lab/fish.txt',header=T)
L21<-fish$L2-fish$L1
L32<-fish$L3-fish$L2
L31<-fish$L3-fish$L1
newfish<-cbind(fish,L21,L32,L31)
str(newfish)
cvfit$cvm
length(cvfit$cvm)
predict(newfish.glmnet.cv, as.matrix(newfish.test), s = "lambda.min", type = "class")
predict(cvfit, as.matrix(newfish.test), s = "lambda.min", type = "class")
predict(cvfit, x, s = "lambda.min", type = "class")
table(predict(cvfit, x, s = "lambda.min", type = "class"),newfish$Species)
distance <- function(x1,y1,x2,y2){
r=6371.009 #地球半徑
a1<-c(x1, y1)
a2<-c(x2, y2)
a1x = r*cos(x1)*cos(y1)
a1y = r*cos(x1)*sin(y1)
a1z = r*sin(y1)
a2x = r*cos(x2)*cos(y2)
a2y = r*cos(x2)*sin(y2)
a2z = r*sin(y2)
a1a2sqr=(a1x-a2x)^2+(a1y-a2y)^2+(a1z-a2z)^2
a1a2=(a1a2sqr)^0.5
w=asin(a1a2/r)
ans=r*2*w/1000
return(ans)
}
distance(121.576064, 24.987590,121.570078, 24.987689)
distance3 <-function(x1,y1,x2,y2){
r=6371.009
a1<-c(x1, y1)
a2<-c(x2, y2)
a=x1-x2
b=y1-y2
c=2*asin(sqrt( (sin(a*0.5))^2 + cos(x1)*cos(x2)*(sin(b*0.5))^2 ));
d=c*r
return(d)
}
distance3(121.576064, 24.987590,121.570078, 24.987689)
distance3 <-function(x1,y1,x2,y2){
r=6371.009
a1<-c(x1, y1)
a2<-c(x2, y2)
a=x1-x2
b=y1-y2
c=2*asin(sqrt( (sin(a*0.5))^2 + cos(y1)*cos(y2)*(sin(b*0.5))^2 ));
d=c*r
return(d)
}
0
distance3 <-function(x1,y1,x2,y2){
r=6371.009
a1<-c(x1, y1)
a2<-c(x2, y2)
a=y1-y2
b=x1-x2
c=2*asin(sqrt( (sin(a*0.5))^2 + cos(y1)*cos(y2)*(sin(b*0.5))^2 ));
d=c*r
return(d)
}
distance3(121.576064, 24.987590,121.570078, 24.987689)
?asin
distance3 <-function(lat1,lon1,lat2,lon2){
r=6371.009
a=lat1-lat2
b=lon1-lon2
c=2*asin(sqrt( (sin(a*0.5))^2 + cos(y1)*cos(y2)*(sin(b*0.5))^2 ));
d=c*r
return(d)
}
distance3(24.987590,121.576064,24.987689,121.570078)
distance3 <-function(lat1,lon1,lat2,lon2){
r=6371.009
a=lat1-lat2
b=lon1-lon2
c=2*asin(sqrt( (sin(a*0.5))^2 + cos(lat1)*cos(lat2)*(sin(b*0.5))^2 ));
d=c*r
return(d)
}
distance3(24.987590,121.576064,24.987689,121.570078)
pi
distance3 <-function(lat1,lon1,lat2,lon2){
r=6371.009
a=lat1*pi/180-lat2*pi/180
b=lon1*pi/180-lon2*pi/180
c=2*asin(sqrt( (sin(a*0.5))^2 + cos(lat1)*cos(lat2)*(sin(b*0.5))^2 ));
d=c*r
return(d)
}
distance3(24.987590,121.576064,24.987689,121.570078)
distance3(24.987590,121.576064,24.987689,121.570078)
distance3(24.987590,121.576064,24.991685, 121.571114)
distance3(24.987620, 121.575978,24.991685, 121.571114)
distance3(24.991604, 121.571224,24.984879, 121.570251)
distance3(24.991604, 121.571224,24.984879, 121.570251)
distance3(25.011288, 121.537599,25.033740, 121.560371)
distance3(25.011288, 121.537599,25.027637, 121.556247)
pi
sin(0.5)
sin(0.5)^2
(sin(0.5))^2
distance3 <-function(lat1,lon1,lat2,lon2){
r=6371.009
a=lat1*pi/180-lat2*pi/180
b=lon1*pi/180-lon2*pi/180
c=2*asin(sqrt(sin(a*0.5)^2 +
cos(lat1*pi/180)*cos(lat2*pi/180)*sin(b*0.5)^2
)
)
d=c*r
return(d)
}
distance3(25.011288, 121.537599,25.027637, 121.556247)
library(dplyr)
?anova
fish<-read.table("/Users/sheng/Documents/NCCU/ML/NCCU_ML_Note/lab/20151021_test.txt",h=T)
View(fish)
L21<-fish$L2-fish$L1
L32<-fish$L3-fish$L2
L31<-fish$L3-fish$L1
newfish<-cbind(fish,L21,L32,L31)
install.packages('adabag')
library(adabag)
library(rpart)
fish.control<-rpart.control(minisplit=10,minbucket=3,cp=0.01)
120/12
500/14
library(data.table)
library(dplyr)
library(tidyr)
library(gdata)
library(stringr)
library(DT)
library(ggthemes)
library(ggplot2)
library(rgeos)
library(maptools)
library(rpart.plot)
setwd('~/Documents/NCCU/ML/NCCU_ML_Note/lab/Midterm/')
wine.data <- read.table('wine_data.txt',header= T)
library(e1071)
i.value <- seq(0,0.05,0.001)
svm.result <- NULL
svm.result <- expand.grid(c=seq(0,1000,10),gamma=seq(0,2,0.5))
svm.result$acc <- 0
for(i in 1:505){
c1 <- svm(class.id~.,data=wine.data,cost=svm.result[i,1],gamma=svm.result[i,2],cross=168)
svm.result$acc[i] <- c1$tot.accuracy
}
c=seq(1,1000,9)
seq(1,1000,9)
seq(1,1000,10)
svm.result <- expand.grid(c=seq(1,1000,10),gamma=seq(0,2,0.5))
svm.result$acc <- 0
for(i in 1:505){
c1 <- svm(class.id~.,data=wine.data,cost=svm.result[i,1],gamma=svm.result[i,2],cross=168)
svm.result$acc[i] <- c1$tot.accuracy
}
svm.result <- expand.grid(c=seq(1,1000,50),gamma=seq(0,2,0.5))
gamma=seq(0,2,0.5)
svm.result <- expand.grid(c=seq(1,100,10),gamma=seq(0,2,0.5))
svm.result <- expand.grid(c=seq(1,100,10),gamma=seq(0,2,1))
seq(1,10,2)
svm.result <- expand.grid(c=seq(1,10,2),gamma=seq(0,2,1))
svm.result$acc <- 0
for(i in 1:505){
c1 <- svm(class.id~.,data=wine.data,cost=svm.result[i,1],gamma=svm.result[i,2],cross=168)
for(i in 1:15){
c1 <- svm(class.id~.,data=wine.data,cost=svm.result[i,1],gamma=svm.result[i,2],cross=168)
svm.result$acc[i] <- c1$tot.accuracy
}
svm.result <- expand.grid(c=seq(1,10,2),gamma=seq(0,2,1))
svm.result$acc <- 0
for(i in 1:15){
c1 <- svm(class.id~.,data=wine.data,cost=svm.result[i,1],gamma=svm.result[i,2],cross=168)
svm.result$acc[i] <- c1$tot.accuracy
}
svm.result
svm(class.id~.,data=wine.data,cost=1,gamma=1,cross=168)
svm(class.id~.,data=wine.data,cost=1,gamma=1,cross=168)$tot.accuracy
svm(class.id~.,data=wine.data,cost=.1,gamma=.1,cross=168)$tot.accuracy
seq(.1,1,10)
seq(.1,1,.1)
svm.result <- expand.grid(c=seq(.1,1,.1),gamma=seq(0.1,1,.1))
svm.result$acc <- 0
for(i in 1:100){
c1 <- svm(class.id~.,data=wine.data,cost=svm.result[i,1],gamma=svm.result[i,2],cross=168)
svm.result$acc[i] <- c1$tot.accuracy
}
svm.result
View(svm.result)
library(cluster)
dis.matrix <- daisy(scale(wine.data[,-1],T,T))
agn <- agnes(dis.matrix,metric="euclidean",stand=FALSE,method="ward")
plot(agn,which.plots=2)
plot(agn,which.plots=1)
wine.control<-rpart.control(minisplit=10,minbucket=3,xval=168,cp=0.042)
?bagging
bagging
library(adabag)
wine.control<-rpart.control(minisplit=10,minbucket=3,xval=168,cp=0.042)
wine.bagging<-bagging(class_id~.,data=wine,mfinal=20,control=wine.control)
wine.bagging<-bagging(class_id~.,data=wine.data,mfinal=20,control=wine.control)
wine.bagging<-bagging(class.id~.,data=wine.data,mfinal=20,control=wine.control)
wine.data.test <- read.table('wine_data_test.txt',header= T)
wine.data.test <- read.table('wine_data_test.txt',header= T)
wine.bagging<-bagging(class.id~.,data=wine.data.test,mfinal=20,control=wine.control)
wine.bagging<-bagging(class.id~.,data=wine.data,mfinal=20,control=wine.control)
wine.bagging.pred <- predict.bagging(wine.bagging,wine.data.test)
wine.bagging.pred$confusion
wine.bagging.pred$error
wine.bagging.pred <- predict.bagging(wine.bagging,wine.data.test)
wine.bagging.pred
wine.bagging.pred <- predict.bagging(wine.bagging,wine.data.test)
wine.bagging.pred$class
wine.bagging.pred$error
wine.bagging.pred$confusion
wine.bagging.pred$class
predict.bagging(wine.tree.prune,wine.data.test)
library(rpart)
wine.control<-rpart.control(minisplit=10,minbucket=3,xval=168) #xval是CV的結果
wine.tree=rpart(class.id~.,data=wine.data,method="class",control=wine.control)
printcp(wine.tree)
wine.tree.prune<-prune.rpart(wine.tree,cp=0.042)
prp(wine.tree.prune, extra=0, prefix="Cartivar\n")
printcp(wine.tree.prune)
temp <- data.frame(classifier='Tree',true.error.rate=0.60119*0.25743)
wine.data.test <- read.table('wine_data_test.txt',header= T)
wine.control<-rpart.control(minisplit=10,minbucket=3,xval=168,cp=0.042)
wine.bagging<-bagging(class.id~.,data=wine.data,mfinal=20,control=wine.control)
# the number of iteration is 20 #
wine.bagging.pred <- predict.bagging(wine.bagging,wine.data.test)
wine.bagging.pred$class
predict.bagging(wine.tree.prune,wine.data.test)
predict.bagging(wine.tree.prun,wine.data.test)
predict.bagging(wine.tree.prune,wine.data.test)
?bagging
predict.bagging(wine.tree.prune,wine.data.test)
predict.bagging(wine.tree,wine.data.test)
wine.bagging<-bagging(class.id~.,data=wine.data,mfinal=100,control=wine.control)
wine.bagging.pred <- predict.bagging(wine.bagging,wine.data.test)
wine.bagging.pred$class
predict.bagging(wine.tree.prune,wine.data.test)
predict(wine.tree.prune,wine.data.test)
predict(wine.tree,wine.data.test)
wine.control<-rpart.control(minisplit=10,minbucket=3,xval=168) #xval是CV的結果
wine.tree=rpart(class.id~.,data=wine.data,method="class",control=wine.control)
predict(wine.tree,wine.data.test)
wine.bagging.pred <- predict.bagging(wine.bagging,wine.data.test)
wine.bagging.pred$class
predict(wine.tree,wine.data.test)
round(predict(wine.tree,wine.data.test),0)
round(predict(wine.tree.prune,wine.data.test),0)
wine.adaboost <- boosting(class.id~., data = wine.data, boos=TRUE, mfinal=20)
wine.adaboost.pred <- predict.boosting(wine.adaboost, wine)
wine.adaboost.pred <- predict.boosting(wine.adaboost, wine.data)
wine.adaboost.pred$confusion
wine.adaboostcv <- boosting.cv(class.id~., data = wine.data,
v = 168, mfinal = 20, control = wine.control)
wine.adaboostcv[-1]$confusion
wine.adaboostcv <- boosting.cv(class.id~., data = wine.data,
v = 2, mfinal = 20, control = wine.control)
wine.adaboostcv[-1]$confusion
?boosting.cv
?boosting.cv
data(iris)
iris.boostcv <- boosting.cv(Species ~ ., v=2, data=iris, mfinal=10,
control=rpart.control(cp=0.01))
iris.boostcv[-1]
iris.boostcv[-1]
wine.control<-rpart.control(minisplit=10,minbucket=3,xval=168) #xval是CV的結果
wine.tree=rpart(class.id~.,data=wine.data,method="class",control=wine.control)
printcp(wine.tree)
wine.tree.prune<-prune.rpart(wine.tree,cp=0.042)
prp(wine.tree.prune, extra=0, prefix="Cartivar\n")
printcp(wine.tree.prune)
wine.data.test <- read.table('wine_data_test.txt',header= T)
wine.control<-rpart.control(minisplit=10,minbucket=3,xval=168)
wine.bagging<-bagging(class.id~.,data=wine.data,mfinal=20,control=wine.control)
wine.bagging.pred <- predict.bagging(wine.bagging,wine.data.test)
wine.bagging.pred$class
round(predict(wine.tree.prune,wine.data.test),0)
round(predict(wine.tree,wine.data.test),0)
wine.data.test <- read.table('wine_data_test.txt',header= T)
wine.control<-rpart.control(minisplit=10,minbucket=3,xval=168)
wine.bagging<-bagging(class.id~.,data=wine.data,mfinal=20,control=wine.control)
# the number of iteration is 20 #
wine.bagging.pred <- predict.bagging(wine.bagging,wine.data.test)
wine.bagging.pred$class
round(predict(wine.tree,wine.data.test),0)
wine.bagging.pred$class
round(predict(wine.tree,wine.data.test),0)
wine.ldacv<-lda(class.id~.,data=wine.data,CV=T)
library("MASS")
wine.ldacv<-lda(class.id~.,data=wine.data,CV=T)
predict(wine.ldacv,wine.data.test)
wine.ldacv<-lda(class.id~.,data=wine.data,CV=T)
predict(wine.ldacv,wine.data.test)
wine.ldacv<-lda(class.id~.,data=wine.data,CV=T)
predict(wine.ldacv,wine.data)
wine.ldacv<-lda(class.id~.,data=wine.data)
wine.lda <-lda(class.id~.,data=wine.data)
predict(wine.lda,wine.data.test)
predict(wine.lda,wine.data.test)$class
predict(wine.qda,wine.data.test)
wine.qda<-qda(class.id~.,data=wine.data)
predict(wine.qda,wine.data.test)
predict(wine.qda,wine.data.test)$class
?knn
wine.knn<-knn(wine.data[,-1],wine.data[,-1],wine.data[,"class.id"],k=2,prob=T)
library(data.table)
library(dplyr)
library(tidyr)
library(gdata)
library(stringr)
library(DT)
library(ggthemes)
library(ggplot2)
library(rgeos)
library(maptools)
library(rpart.plot)
library(adabag)
setwd('~/Documents/NCCU/ML/NCCU_ML_Note/lab/Midterm/')
wine.knn<-knn(wine.data[,-1],wine.data[,-1],wine.data[,"class.id"],k=2,prob=T)
library(class)
wine.knn<-knn(wine.data[,-1],wine.data[,-1],wine.data[,"class.id"],k=2,prob=T)
predict(wine.knn,wine.data.test)
wine.knn<-knn(wine.data[,-1],wine.data[,-1],wine.data[,"class.id"],k=2,prob=T)
predict(wine.knn,wine.data.test)
wine.knn<-knn(wine.data[,-1],wine.test,wine.data[,"class.id"],k=2,prob=T)
wine.knn<-knn(wine.data[,-1],wine.data.test,wine.data[,"class.id"],k=2,prob=T)
wine.knn
wine.knn<-knn(wine.data[,-1],wine.data.test,wine.data[,"class.id"],k=2,prob=T)
wine.knn
wine.svm <- svm(class.id~.,data=wine.data,cost=0.4,gamma=0.1)
predict(wine.svm,wine.data.test)
data.frame(
method=c('Bagging','Boosting','Original Tree','LDA','QDA','NN','SVM'),
result=c('BBBBCC','BBBCCA','BBBBBC','BBCBCB','BBBBCB','CBBBCA','ABBBBB')
)
data.frame(
method=c('Bagging','Boosting','Tree','LDA','QDA','NN','SVM'),
result=c('BBBBCC','BBBCCA','BBBBBC','BBCBCB','BBBBCB','CBBBCA','ABBBBB')
)
data.frame(
method=c('Bagging','Boosting','Tree','LDA','QDA','NN','SVM'),
result=c('BBBBCC','BBBCCA','BBBBBC','BBCBCB','BBBBCB','CBBBCA','ABBBBB'))
library(e1071)
i.value <- seq(0,0.05,0.001)
svm.result <- NULL
for(i in 1:25){
s1<-svm(class.id~.,data=wine.data,gamma=i.value[i])
pred1<-predict(s1,wine.data[,-1])
svm.acc <- 1-(sum(diag(table(pred1,wine.data[,1])))/
sum(table(pred1,wine.data[,1])))
svm.result <- c(svm.result,svm.acc)}
data.frame(gamma.choice=i.value[1:25],true.error.rate=svm.result)
svm.result <- expand.grid(c=seq(.1,1,.1),gamma=seq(0.1,1,.1))
svm.result$acc <- 0
for(i in 1:100){
c1 <- svm(class.id~.,data=wine.data,cost=svm.result[i,1],gamma=svm.result[i,2],cross=168)
svm.result$acc[i] <- c1$tot.accuracy
}
svm.result
svm.result %>% arrange(desc(acc)) %>% top_n(5)
km <- kmeans(scale(wine.data[,-1],T,T),3,20)
pca.wine.data <- princomp(scale(wine.data[,-1],scale=TRUE,center=TRUE),cor=FALSE)
pcs.wine.data <- predict(pca.wine.data)
pcs.wine.data[,1:2] %>% as.data.frame %>%
bind_cols(data.frame(km.cluster=km$cluster %>% as.factor)) %>%
ggplot(aes(x=Comp.1,y=Comp.2,label=km.cluster,color=km.cluster)) + geom_text() +
theme_bw()+
guides(color='none')+
labs(title='K-means result')
pcs.wine.data[,1:2] %>% as.data.frame %>%
bind_cols(wine.data %>% select(class.id)) %>%
ggplot(aes(x=Comp.1,y=Comp.2,label=class.id,color=class.id)) + geom_text() +
theme_bw()+
guides(color='none')+
labs(title='Original class.id')
km <- kmeans(scale(wine.data[,-1],T,T),3,20)
pca.wine.data <- princomp(scale(wine.data[,-1],scale=TRUE,center=TRUE),cor=FALSE)
pcs.wine.data <- predict(pca.wine.data)
pcs.wine.data[,1:2] %>% as.data.frame %>%
bind_cols(data.frame(km.cluster=km$cluster %>% as.factor)) %>%
ggplot(aes(x=Comp.1,y=Comp.2,label=km.cluster,color=km.cluster)) + geom_text() +
theme_bw()+
guides(color='none')+
labs(title='K-means result')
pcs.wine.data[,1:2] %>% as.data.frame %>%
bind_cols(wine.data %>% select(class.id)) %>%
ggplot(aes(x=Comp.1,y=Comp.2,label=class.id,color=class.id)) + geom_text() +
theme_bw()+
guides(color='none')+
labs(title='Original class.id')
pcs.wine.data[,1:2]
pcs.wine.data
pcs.wine.data %>% View
pcs.wine.data[,1:2] %>% as.data.frame %>%
bind_cols(wine.data %>% select(class.id))
wine.data
wine.data %>% View
wine.data %>% select('class.id')
wine.data %>% select(1)
wine.data %>% select(1)
wine.data %>% select(1)
wine.data %>% select(1)
wine.data
wine.data %>% View
pcs.wine.data[,1:2] %>% as.data.frame %>%
bind_cols( wine.data$class.id ) %>%
ggplot(aes(x=Comp.1,y=Comp.2,label=class.id,color=class.id)) + geom_text() +
theme_bw()+
guides(color='none')+
labs(title='Original class.id')
pcs.wine.data[,1:2] %>% as.data.frame %>%
bind_cols( wine.data$class.id %>% as.data.frame) %>%
ggplot(aes(x=Comp.1,y=Comp.2,label=class.id,color=class.id)) + geom_text() +
theme_bw()+
guides(color='none')+
labs(title='Original class.id')
pcs.wine.data[,1:2] %>% as.data.frame
wine.data[,1]
pcs.wine.data[,1:2] %>% as.data.frame %>%
bind_cols( wine.data[,1] )
iris %>% select(1)
iris %>% select(Species)
library(dplyr)
iris %>% select(Species)
iris
colnames(iris)
iris %>% select(Species)
iris %>% select('')
iris %>% select('Species')
detach("package:dplyr", unload=TRUE)
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
iris %>% select('Species')
iris %>% select(1)
wine.data %>% select(1)
pcs.wine.data[,1:2] %>% as.data.frame %>%
bind_cols( wine.data %>% select(1) ) %>%
ggplot(aes(x=Comp.1,y=Comp.2,label=class.id,color=class.id)) + geom_text() +
theme_bw()+
guides(color='none')+
labs(title='Original class.id')
detach(dplyr)
detach("package:dplyr", unload=TRUE)
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("MASS")
wine.ldacv<-lda(class.id~.,data=wine.data,CV=T)
wine.ldacv
table(wine.data$class.id,wine.ldacv$class)
c('我是誰')
str_locate(c('我是誰'),'是')
str_locate(c('我是誰','是你嘛'),'是')
str_locate(c('我是誰是'),'是')
str_locate_all(c('我是誰是'),'是')
str_locate_all(c('我是誰g4'),'是')
str_locate_all(c('我是誰是'),'是')
str_locate_all(c('我是是是'),'是')
str_locate(c('我是是是'),'是')
str_locate_all(c('我是是是'),'是')
?str_locate_all
fruit <- c("apple", "banana", "pear", "pineapple")
str_locate(fruit, "$")
str_locate(fruit, "a")
str_locate(fruit, "e")
str_locate(fruit, c("a", "b", "p", "p"))
str_locate_all(fruit, "a")
str_locate_all(fruit, "e")
str_locate_all(fruit, c("a", "b", "p", "p"))
iris
quantile(iris$Sepal.Length)
cut(quantile(iris$Sepal.Length))
?cut
quantile(iris$Sepal.Length)
cut(iris$Sepal.Length,breaks=quantile(iris$Sepal.Length))
cut(iris$Sepal.Length,breaks=quantile(iris$Sepal.Length),labels = c('a','b','c','d'))
iris %>%
mutate(new=cut(iris$Sepal.Length,
breaks=quantile(iris$Sepal.Length),
labels = c('a','b','c','d'))) %>% View
quantile(iris$Sepal.Length)
iris %>%
mutate(new=cut(iris$Sepal.Length,
breaks=quantile(iris$Sepal.Length),
labels = c('a','b','c','d'),
include.lowest=T)) %>% View
?gather
?spread
